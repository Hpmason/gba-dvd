[config]
skip_core_tasks = true

[tasks.verify-toolchain]
script_runner = "@duckscript"
script = [
'''
channel = get_env CARGO_MAKE_RUST_CHANNEL
assert_eq ${channel} nightly "Rust toolchain must be set to nightly"
'''
]


[tasks.build-rom-debug]
dependencies = ["verify-toolchain"]
command = "cargo"
args = ["build", "--target=thumbv4t-none-eabi", "-Zbuild-std=core"]

[tasks.build-rom-release]
dependencies = ["verify-toolchain"]
command = "cargo"
args = ["build",  "--release", "--target=thumbv4t-none-eabi", "-Zbuild-std=core"]

[tasks.pack-roms]
script_runner = "@duckscript"
script = [
'''
bin_name = set gba-dvd
release_target = get_env RELEASE_TARGET
path = set ./target/thumbv4t-none-eabi/${release_target}

path_exists = is_path_exists ${path}/${bin_name}.gba
if {path_exists}
    echo "Packing: ${path}/${example} to ${path}/${bin_name}.gba"
    exec arm-none-eabi-objcopy -O binary ${path}/${bin_name} ${path}/${bin_name}.gba
    echo "Fixing headers: ${path}/${bin_name}.gba"
    exec gbafix ${path}/${bin_name}.gba
end
'''
]

[tasks.pack-roms-release]
dependencies = ["build-rom-release"]
env = { RELEASE_TARGET = "release" }
run_task = "pack-roms"

[tasks.pack-roms-debug]
dependencies = ["build-rom-debug"]
env = { RELEASE_TARGET = "debug" }
run_task = "pack-roms"

[tasks.test]
dependencies = ["verify-toolchain"]
command = "cargo"
args = ["test", "--lib"]

[tasks.justrelease]
dependencies = ["pack-roms-release"]

[tasks.build-all]
dependencies = ["pack-roms-debug", "pack-roms-release"]

[tasks.default]
alias = "build-all"
